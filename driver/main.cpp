#include <driver/xorstr.h>
#include <system/funcs.h>
#include <core/hook.h>
#include <driver/include.h>

#define RVA(addr, size, off) (const uintptr_t)(((const uintptr_t)addr) + *( int * )( ((const uintptr_t)addr) + off ) + size)

extern "C" NTSTATUS DriverEntry( PDRIVER_OBJECT, PUNICODE_STRING )
{

	uintptr_t win32k = system::get_system_module(XORS(L"win32k.sys"));
	if (!win32k)
	{
		printf("Cannot locate win32k.sys in system files. Verify system files and try again.\n");
		return STATUS_ABANDONED;
	}

	core_hook::fptr_addr = system::find_pattern(win32k, XORS("\x48\x8B\x05\x00\x00\x00\x00\x48\x85\xC0\x74\x06\xFF\x15\x00\x00\x00\x00\x48\x83\xC4\x28\xC3\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x48\x83\xEC\x28\x48\x8B\x05\x00\x00\x00\x00\x48\x85\xC0\x74\x06\xFF\x15\x00\x00\x00\x00\x48\x83\xC4\x28\xC3\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x48\x83\xEC\x28\x48\x8B\x05\x00\x00\x00\x00\x48\x85\xC0\x74\x06\xFF\x15\x00\x00\x00\x00\x48\x83\xC4\x28\xC3\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x48\x83\xEC\x28\x48\x8B\x05\x00\x00\x00\x00\x48\x85\xC0\x74\x06\xFF\x15\x00\x00\x00\x00\x48\x83\xC4\x28\xC3\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x48\x83\xEC\x28\x48\x8B\x05\x00\x00\x00\x00\x48\x85\xC0\x74\x06\xFF\x15\x00\x00\x00\x00\x48\x83\xC4\x28\xC3\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x48\x83\xEC\x28\x48\x8B\x05\x00\x00\x00\x00\x48\x85\xC0\x74\x06\xFF\x15\x00\x00\x00\x00\x48\x83\xC4\x28\xC3\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x48\x83\xEC\x38\x48\x8B\x05\x00\x00\x00\x00\x48\x85\xC0\x74\x10\x44\x8B\x54\x24\x00\x44\x89\x54\x24\x00\xFF\x15\x00\x00\x00\x00\x48\x83\xC4\x38\xC3\xCC\xCC\xCC\xCC\xCC\xCC\xCC\x48\x83\xEC\x38\x48\x8B\x05\x00\x00\x00\x00\x48\x85\xC0\x74\x10"), XORS("xxx????xxxxxxx????xxxxxxxxxxxxxxxxxxxxx????xxxxxxx????xxxxxxxxxxxxxxxxxxxxx????xxxxxxx????xxxxxxxxxxxxxxxxxxxxx????xxxxxxx????xxxxxxxxxxxxxxxxxxxxx????xxxxxxx????xxxxxxxxxxxxxxxxxxxxx????xxxxxxx????xxxxxxxxxxxxxxxxxxxxx????xxxxxxxxx?xxxx?xx????xxxxxxxxxxxxxxxxxxx????xxxxx") );

	if (!core_hook::fptr_addr)
	{
		printf("Cannot find target func.\n");
		return STATUS_UNSUCCESSFUL;

	}
	printf("NtUserSetDialogControlDpiChangeBehavior : 0x%llx\n", core_hook::fptr_addr);

	*(void**)&core_hook::o_function_qword_1 = InterlockedExchangePointer((void**)dereference(core_hook::fptr_addr), (void*)core_hook::hooked_fptr);
	
	printf("Successfully Loaded Saturn Open Source Driver - github.com/Saturn-IV\n");
	return STATUS_SUCCESS;
}